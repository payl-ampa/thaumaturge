{"name":"322","type":"graph","parameters":{},"node_position":{"x":0,"y":0},"seed_int":0,"label":"Graph","shortdesc":"","longdesc":"","nodes":[{"name":"Material","type":"material_export","parameters":{"blend":0,"flags_transparent":true,"cull":2,"flags_offset":false,"flags_fresnel":true,"fresnel_amount":1},"node_position":{"x":1668.000122,"y":587.262207},"seed_int":0,"shader_model":{"code":"","exports":{"Godot/CanvasItem":{"export_extension":"tres","files":[{"file_name":"$(path_prefix).tres","template":"[gd_resource type=\"ShaderMaterial\" load_steps=2 format=2]\n[ext_resource path=\"$(file_prefix).gdshader\" type=\"Shader\" id=1]\n$begin_buffers\n[ext_resource path=\"$(file_prefix)_texture_$(buffer_index).png\" type=\"Texture\" id=$(expr:$(buffer_index)+1)]\n$end_buffers\n[resource]\nshader = ExtResource( 1 )\n$begin_buffers\nshader_param/texture_$(buffer_index) = ExtResource( $(expr:$(buffer_index)+1) )\n$end_buffers\n","type":"template"},{"file_name":"$(path_prefix).gdshader","template":"shader_type canvas_item;\n$begin_generate\nrender_mode unshaded, blend_$blend;\n$end_generate\nuniform vec3 uv1_scale = vec3(1.0, 1.0, 1.0);\nuniform vec3 uv1_offset = vec3(0.0, 0.0, 0.0);\nuniform float variation = 0.0;\nvarying float elapsed_time;\nvoid vertex() {\n\telapsed_time = TIME;\n\tUV = UV*uv1_scale.xy+uv1_offset.xy;\n}\n$definitions float_uniform_to_const,rename_buffers\nvoid fragment() {\n\tfloat _seed_variation_ = variation;\n\tvec2 uv = fract(UV);\n$begin_generate rename_buffers\n\tvec4 color_tex = $color_tex(uv);\n\tcolor_tex = mix(pow((color_tex + vec4(0.055)) * (1.0 / (1.0 + 0.055)),vec4(2.4)),color_tex * (1.0 / 12.92),lessThan(color_tex,vec4(0.04045)));\n\tCOLOR = color_tex;\n$end_generate\n}\n","type":"template"},{"file_name":"$(path_prefix)_texture_$(buffer_index).png","type":"buffers"}]},"Godot/Spatial":{"export_extension":"tres","files":[{"file_name":"$(path_prefix).tres","template":"[gd_resource type=\"ShaderMaterial\" load_steps=2 format=2]\n[ext_resource path=\"$(file_prefix).gdshader\" type=\"Shader\" id=1]\n$begin_buffers\n[ext_resource path=\"$(file_prefix)_texture_$(buffer_index).png\" type=\"Texture\" id=$(expr:$(buffer_index)+1)]\n$end_buffers\n[resource]\nshader = ExtResource( 1 )\n$begin_buffers\nshader_param/texture_$(buffer_index) = ExtResource( $(expr:$(buffer_index)+1) )\n$end_buffers\n","type":"template"},{"file_name":"$(path_prefix).gdshader","template":"shader_type spatial;\n$begin_generate\nrender_mode unshaded, blend_$blend;\n$end_generate\nuniform vec3 uv1_scale = vec3(1.0, 1.0, 1.0);\nuniform vec3 uv1_offset = vec3(0.0, 0.0, 0.0);\nuniform float variation = 0.0;\nvarying float elapsed_time;\nvoid vertex() {\n\telapsed_time = TIME;\n\tUV = UV*uv1_scale.xy+uv1_offset.xy;\n}\n$definitions float_uniform_to_const,rename_buffers\nvoid fragment() {\n\tfloat _seed_variation_ = variation;\n\tvec2 uv = fract(UV);\n$begin_generate rename_buffers\n\tvec4 color_tex = $color_tex(uv);\n\tcolor_tex = mix(pow((color_tex + vec4(0.055)) * (1.0 / (1.0 + 0.055)),vec4(2.4)),color_tex * (1.0 / 12.92),lessThan(color_tex,vec4(0.04045)));\n\tALBEDO = color_tex.rgb;\n\tALPHA = color_tex.a;\n$end_generate\n}\n","type":"template"},{"file_name":"$(path_prefix)_texture_$(buffer_index).png","type":"buffers"}]},"Unity":{"export_extension":"mat","files":[{"file_name":"$(path_prefix).shader","template":"Shader \"Unlit/NewUnlitShader\"\n{\n\tProperties\n\t{\n\t}\n\tSubShader\n\t{\n\t\tTags { \"RenderType\"=\"Opaque\" }\n\t\tLOD 100\n\t\tPass\n\t\t{\n\t\t\tBlend One One\n\t\t\tCGPROGRAM\n\t\t\t#pragma vertex vert\n\t\t\t#pragma fragment frag\n\t\t\t// make fog work\n\t\t\t#pragma multi_compile_fog\n\t\t\t#include \"UnityCG.cginc\"\n\t\t\tstruct appdata\n\t\t\t{\n\t\t\t\tfloat4 vertex : POSITION;\n\t\t\t\tfloat2 uv : TEXCOORD0;\n\t\t\t};\n\t\t\tstruct v2f\n\t\t\t{\n\t\t\t\tfloat2 uv : TEXCOORD0;\n\t\t\t\tUNITY_FOG_COORDS(1)\n\t\t\t\tfloat4 vertex : SV_POSITION;\n\t\t\t};\n$definitions hlsl,rename_buffers,unity\n\t\t\n\t\t\tv2f vert (appdata v) {\n\t\t\t\tv2f o;\n\t\t\t\to.vertex = UnityObjectToClipPos(v.vertex);\n\t\t\t\to.uv = v.uv;\n\t\t\t\tUNITY_TRANSFER_FOG(o,o.vertex);\n\t\t\t\treturn o;\n\t\t\t}\n\t\t\tfixed4 frag (v2f i) : SV_Target {\n\t\t\t\tfloat _seed_variation_ = 0.0;\n\t\t\t\tfloat2 uv = i.uv;\n$begin_generate hlsl,rename_buffers,unity\n\t\t\t\t// sample the generated texture\n\t\t\t\tfixed4 col = $color_tex(uv);\n$end_generate\n\t\t\t\t// apply fog\n\t\t\t\tUNITY_APPLY_FOG(i.fogCoord, col);\n\t\t\t\treturn col;\n\t\t\t}\n\t\t\tENDCG\n\t\t}\n\t}\n}\n","type":"template"},{"file_name":"$(path_prefix)_texture_$(buffer_index).png","type":"buffers"},{"file_name":"$(path_prefix)_texture_$(buffer_index).png.meta","template":"fileFormatVersion: 2\nguid: $uid(tex_$(buffer_index))\nTextureImporter:\n  internalIDToNameTable: []\n  externalObjects: {}\n  serializedVersion: 11\n  mipmaps:\n\tmipMapMode: 0\n\tenableMipMap: 1\n\tsRGBTexture: 1\n\tlinearTexture: 0\n\tfadeOut: 0\n\tborderMipMap: 0\n\tmipMapsPreserveCoverage: 0\n\talphaTestReferenceValue: 0.5\n\tmipMapFadeDistanceStart: 1\n\tmipMapFadeDistanceEnd: 3\n  bumpmap:\n\tconvertToNormalMap: 0\n\texternalNormalMap: 0\n\theightScale: 0.25\n\tnormalMapFilter: 0\n  isReadable: 0\n  streamingMipmaps: 0\n  streamingMipmapsPriority: 0\n  vTOnly: 0\n  grayScaleToAlpha: 0\n  generateCubemap: 6\n  cubemapConvolution: 0\n  seamlessCubemap: 0\n  textureFormat: 1\n  maxTextureSize: 2048\n  textureSettings:\n\tserializedVersion: 2\n\tfilterMode: -1\n\taniso: -1\n\tmipBias: -100\n\twrapU: -1\n\twrapV: -1\n\twrapW: -1\n  nPOTScale: 1\n  lightmap: 0\n  compressionQuality: 50\n  spriteMode: 0\n  spriteExtrude: 1\n  spriteMeshType: 1\n  alignment: 0\n  spritePivot: {x: 0.5, y: 0.5}\n  spritePixelsToUnits: 100\n  spriteBorder: {x: 0, y: 0, z: 0, w: 0}\n  spriteGenerateFallbackPhysicsShape: 1\n  alphaUsage: 1\n  alphaIsTransparency: 0\n  spriteTessellationDetail: -1\n  textureType: 0\n  textureShape: 1\n  singleChannelComponent: 0\n  flipbookRows: 1\n  flipbookColumns: 1\n  maxTextureSizeSet: 0\n  compressionQualitySet: 0\n  textureFormatSet: 0\n  ignorePngGamma: 0\n  applyGammaDecoding: 0\n  platformSettings:\n  - serializedVersion: 3\n\tbuildTarget: DefaultTexturePlatform\n\tmaxTextureSize: 2048\n\tresizeAlgorithm: 0\n\ttextureFormat: -1\n\ttextureCompression: 1\n\tcompressionQuality: 50\n\tcrunchedCompression: 0\n\tallowsAlphaSplitting: 0\n\toverridden: 0\n\tandroidETC2FallbackOverride: 0\n\tforceMaximumCompressionQuality_BC6H_BC7: 0\n  spriteSheet:\n\tserializedVersion: 2\n\tsprites: []\n\toutline: []\n\tphysicsShape: []\n\tbones: []\n\tspriteID: \n\tinternalID: 0\n\tvertices: []\n\tindices: \n\tedges: []\n\tweights: []\n\tsecondaryTextures: []\n  spritePackingTag: \n  pSDRemoveMatte: 0\n  pSDShowRemoveMatteOption: 0\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n","type":"buffer_templates"},{"file_name":"$(path_prefix).mat","template":"%YAML 1.1\n%TAG !u! tag:unity3d.com,2011:\n--- !u!21 &2100000\nMaterial:\n  serializedVersion: 6\n  m_ObjectHideFlags: 0\n  m_CorrespondingSourceObject: {fileID: 0}\n  m_PrefabInstance: {fileID: 0}\n  m_PrefabAsset: {fileID: 0}\n  m_Name: $(file_prefix)\n  m_Shader: {fileID: 4800000, guid: $uid(shader), type: 3}\n  m_ShaderKeywords: \n  m_LightmapFlags: 4\n  m_EnableInstancingVariants: 0\n  m_DoubleSidedGI: 0\n  m_CustomRenderQueue: -1\n  stringTagMap: {}\n  disabledShaderPasses: []\n  m_SavedProperties:\n\tserializedVersion: 3\n\tm_TexEnvs:\n\t- _MainTex:\n\t\tm_Texture: {fileID: 2800000, guid: 6c5d2d4e94384751a0ce7d6619e0d49a, type: 3}\n\t\tm_Scale: {x: 1, y: 1}\n\t\tm_Offset: {x: 0, y: 0}\n$begin_buffers\n\t- texture_$(buffer_index):\n\t\tm_Texture: {fileID: 2800000, guid: $uid(tex_$(buffer_index)), type: 3}\n\t\tm_Scale: {x: 1, y: 1}\n\t\tm_Offset: {x: 0, y: 0}\n$end_buffers\n  m_BuildTextureStacks: []\n","type":"template"},{"file_name":"$(path_prefix).shader.meta","template":"fileFormatVersion: 2\nguid: $uid(shader)\nShaderImporter:\n  externalObjects: {}\n  defaultTextures: []\n  nonModifiableTextures: []\n  preprocessorOverride: 0\n  userData: \n  assetBundleName: \n  assetBundleVariant: \n","type":"template"}]},"Unreal/Unreal Engine 4":{"export_extension":"mm2ue","files":[{"file_name":"$(path_prefix).mm2ue","template":"/*\nInstructions to setup this material:\n- copy material_unlit.uasset and open the copy\n$begin_buffers\n- create a TextureObject for $(file_prefix)_texture_$(buffer_index).png in the graph\n  and a new input for texture_$(buffer_index) in the custom node, and connect them\n$end_buffers\n- copy the shader code below and paste it into the Custom node\n*/\nstruct Functions {\n$definitions hlsl,rename_buffers,unreal\n\tfixed4 generated_shader(float2 uv) {\n\t\tfloat _seed_variation_ = 0.0;\n$begin_generate hlsl,rename_buffers,unreal\n\t\t// sample the generated texture\n\t\treturn $color_tex(uv);\n$end_generate\n\t}\n};\nFunctions f;\nreturn f.generated_shader(TexCoords);\n","type":"template"},{"file_name":"$(path_prefix)_texture_$(buffer_index).png","type":"buffers"}]},"Unreal/Unreal Engine 5":{"export_extension":"py","files":[{"file_name":"$(path_prefix).py","prompt_overwrite":false,"template":"import unreal\nimport mm\nfrom importlib import reload\nreload(mm)\nmat = mm.Material('$(file_prefix)', True)\nmat.clear()\nCustom_0 = mat.add_node('Custom', -264, 80)\nCustom_0.set_editor_property('code', mm.read_text_file('$(path_prefix).shader'))\nCustom_0.set_editor_property('output_type', unreal.CustomMaterialOutputType.CMOT_FLOAT4)\nCustom_0.set_editor_property('additional_outputs', [ mm.custom_output('metallic', 1), mm.custom_output('roughness', 1), mm.custom_output('normal', 3), mm.custom_output('emission', 3)])\ninputs = [mm.custom_input('TexCoords'), mm.custom_input('Time')]\n$begin_buffers\ninputs.append(mm.custom_input('texture_$(buffer_index)'))\n$end_buffers\nCustom_0.set_editor_property('inputs', inputs)\nTextureCoordinate_0 = mat.add_node('TextureCoordinate', -472, 80)\nTime_0 = mat.add_node('Time', -456, 180)\n$begin_buffers\nTexture_$(buffer_index) = mat.add_node('TextureObject', -456, $(expr:110+170*$(buffer_index)))\nTexture_$(buffer_index).set_editor_property('texture', mm.import_texture('$(path_prefix)_texture_$(buffer_index).png', '/Game/Textures'))\n$end_buffers\nmat.connect_property(Custom_0, 'return', unreal.MaterialProperty.MP_BASE_COLOR)\nmat.connect_nodes(TextureCoordinate_0, '', Custom_0, 'TexCoords')\nmat.connect_nodes(Time_0, '', Custom_0, 'Time')\n$begin_buffers\nmat.connect_nodes(Texture_$(buffer_index), '', Custom_0, 'texture_$(buffer_index)')\n$end_buffers\nmat.save()\n","type":"template"},{"file_name":"$(path_prefix)_texture_$(buffer_index).png","type":"buffers"},{"file_name":"$(path_prefix).shader","template":"struct Functions {\n\tfloat Time;\n$begin_buffers\n\tTexture2D texture_$(buffer_index);\n\tSamplerState texture_$(buffer_index)Sampler;\n$end_buffers\n\t\n$definitions hlsl_base,rename_buffers,unreal5\n\tfixed4 generated_shader(float2 uv, float _time\n$begin_buffers\n\t\t\t\t\t\t  , Texture2D _texture_$(buffer_index), SamplerState _texture_$(buffer_index)Sampler\n$end_buffers\n\t\t\t\t\t\t\t) {\n\t  \tfloat _seed_variation_ = 0.0;\n\t\tTime = _time;\n$begin_buffers\n\t\ttexture_$(buffer_index) = _texture_$(buffer_index);\n\t\ttexture_$(buffer_index)Sampler = _texture_$(buffer_index)Sampler;\n$end_buffers\n\t\t\n$begin_generate hlsl_base,rename_buffers,unreal5\n\t\t// sample the generated texture\n\t\treturn $color_tex(uv);\n$end_generate\n\t}\n};\nFunctions f;\nreturn f.generated_shader(TexCoords, Time\n$begin_buffers\n\t\t\t\t\t\t\t\t  , texture_$(buffer_index), texture_$(buffer_index)Sampler\n$end_buffers\n\t\t\t\t\t\t\t\t   );\n","type":"template"},{"file_name":"clipboard","template":"\"$(path_prefix).py\"\n","type":"template"}],"material":"material_dynamic","name":"Unreal/Unreal Engine 5"}},"global":"","inputs":[{"default":"vec4(1.0)","label":"","name":"color_tex","type":"rgba"},{"default":"vec3(0.0)","function":true,"label":"3:Offset","name":"offset","type":"rgb"},{"default":"vec3(1.0)","function":true,"label":"Scale","name":"scale","type":"rgb"},{"default":"0.0","label":"5:Transparency","name":"opacity_tex","type":"f"},{"default":"vec4(0.0)","label":"Backface","name":"backface_tex","type":"rgba"},{"default":"vec3(0.0)","label":"Fresnel","name":"fresnel_col","type":"rgb"}],"instance":"","name":"Dynamic Unlit Material","outputs":[],"parameters":[{"default":0,"label":"Blend","name":"blend","type":"enum","values":[{"name":"Add","value":"add"},{"name":"Mix","value":"mix"},{"name":"Mul","value":"mul"},{"name":"Sub","value":"sub"}]},{"default":false,"label":"5:","name":"flags_transparent","type":"boolean"},{"default":1,"label":"2:Culling","name":"cull","type":"enum","values":[{"name":"Front","value":"front"},{"name":"Back","value":"back"},{"name":"Disabled","value":"disabled"}]},{"default":false,"label":"3:","name":"flags_offset","type":"boolean"},{"default":false,"label":"7:","name":"flags_fresnel","type":"boolean"},{"control":"None","default":0.5,"label":"7:Amount","max":1,"min":0,"name":"fresnel_amount","step":0.01,"type":"float"}],"preview_shader":"shader_type spatial;\n$begin_generate\nrender_mode unshaded, cull_$cull, blend_$blend\n$if $(connected:opacity_tex) and $(param:flags_transparent)\n,depth_draw_alpha_prepass\n$fi\n;\n$end_generate\n\nuniform vec3 uv1_scale = vec3(1.0, 1.0, 1.0);\nuniform vec3 uv1_offset = vec3(0.0, 0.0, 0.0);\nuniform float variation = 0.0;\n\nvarying float elapsed_time;\n\nfloat fresnel(float amount, vec3 normal, vec3 view)\n{\n\treturn pow((1.0 - clamp(dot(normalize(normal), normalize(view)), 0.0, 1.0 )), amount);\n}\n\n$definitions\n\nvoid vertex() {\n$begin_generate\n\tfloat _seed_variation_ = variation;\n\telapsed_time = TIME;\n\tUV = UV*uv1_scale.xy+uv1_offset.xy;\n$if $(param:flags_offset)\n\tVERTEX *= $scale(fract(UV));\n\tVERTEX += $offset(fract(UV));\n$fi\n$end_generate\n}\n\n\n\nvoid fragment() {\n\tfloat _seed_variation_ = variation;\n\tvec2 uv = fract(UV);\n$begin_generate\n\tvec4 color_tex = $color_tex(uv);\n\tcolor_tex = mix(pow((color_tex + vec4(0.055)) * (1.0 / (1.0 + 0.055)),vec4(2.4)),color_tex * (1.0 / 12.92),lessThan(color_tex,vec4(0.04045)));\n\tALBEDO = mix(color_tex.rgb,$backface_tex(uv).rgb,1.0-float(FRONT_FACING))\n$if $(param:flags_fresnel)\n\t\t\t+fresnel($fresnel_amount,NORMAL, VIEW)*$fresnel_col($uv)\n$fi\n;\n\tALPHA = color_tex.a;\n$if $(connected:opacity_tex) and $(param:flags_transparent)\n\tALPHA = $opacity_tex(uv);\n$fi\n$end_generate\n}\n"},"export":{},"export_paths":{}},{"name":"fbm2","type":"fbm2","parameters":{"noise":1,"scale_x":6,"scale_y":2,"folds":0,"iterations":2,"persistence":0.78,"offset":1},"node_position":{"x":-97.93998,"y":299.818451},"seed_int":3032540416,"preview":0},{"name":"warp","type":"warp","parameters":{"mode":0,"amount":0.125,"eps":0.1},"node_position":{"x":222.310028,"y":224.579163},"seed_int":0,"preview":0},{"name":"transform2","type":"transform2","parameters":{"translate_x":0,"translate_y":"-$time*0.5","rotate":0,"scale_x":1,"scale_y":-1,"mode":1},"node_position":{"x":284.440033,"y":809.920044},"seed_int":0,"preview":0,"generic_size":1},{"name":"decompose","type":"decompose","parameters":{},"node_position":{"x":469.25,"y":169.259186},"seed_int":0},{"name":"math","type":"math","parameters":{"op":6,"default_in1":0,"default_in2":50,"clamp":false},"node_position":{"x":438,"y":337.755524},"seed_int":0,"preview":0},{"name":"warp_2","type":"warp","parameters":{"mode":0,"amount":0.255,"eps":0.1},"node_position":{"x":376.280029,"y":674.23999},"seed_int":0,"preview":0},{"name":"fbm2_2","type":"fbm2","parameters":{"noise":3,"scale_x":2,"scale_y":7,"folds":0,"iterations":2,"persistence":0.64,"offset":1},"node_position":{"x":-5.939972,"y":829.569641},"seed_int":666872384,"preview":0},{"name":"warp_3","type":"warp","parameters":{"mode":0,"amount":0.19,"eps":0.1},"node_position":{"x":225.350037,"y":439.76947},"seed_int":0,"preview":0},{"name":"transform2_2","type":"transform2","parameters":{"translate_x":0,"translate_y":"$time*0.2","rotate":90,"scale_x":1,"scale_y":-1,"mode":1},"node_position":{"x":103.350044,"y":563.518677},"seed_int":0,"preview":0,"generic_size":1},{"name":"math_3","type":"math","parameters":{"op":12,"default_in1":0,"default_in2":0,"clamp":false},"node_position":{"x":697,"y":189.502625},"seed_int":0,"preview":0},{"name":"buffer_2","type":"buffer","parameters":{"size":7},"node_position":{"x":-107.939972,"y":559.319458},"seed_int":0,"version":1},{"name":"math_2","type":"math","parameters":{"op":6,"default_in1":0,"default_in2":5,"clamp":false},"node_position":{"x":418.500031,"y":505.253967},"seed_int":0},{"name":"math_4","type":"math","parameters":{"op":0,"default_in1":0,"default_in2":0,"clamp":false},"node_position":{"x":695.25,"y":363.750275},"seed_int":0},{"name":"supersample","type":"supersample","parameters":{"size":8,"count":5,"width":10},"node_position":{"x":673,"y":518.500549},"seed_int":0},{"name":"blend2","type":"blend2","parameters":{"blend_type1":9,"amount1":0.25},"node_position":{"x":952.5,"y":452.245758},"seed_int":0,"generic_size":1},{"name":"translate","type":"translate","parameters":{"translate_x":0.01625,"translate_y":-0.0022},"node_position":{"x":610,"y":651},"seed_int":0,"generic_size":1},{"name":"buffer_4","type":"buffer","parameters":{"size":8},"node_position":{"x":198.53006,"y":358.611542},"seed_int":0,"version":1},{"name":"warp_4","type":"warp","parameters":{"mode":0,"amount":0.16,"eps":0.1},"node_position":{"x":-86.939941,"y":674.124817},"seed_int":0,"preview":0},{"name":"voronoi_triangle","type":"voronoi_triangle","parameters":{"scale_x":24,"scale_y":8,"stretch_x":1,"stretch_y":1,"randomness":1},"node_position":{"x":543.98999,"y":766.496338},"seed_int":1880093184},{"name":"buffer_3","type":"buffer","parameters":{"size":10},"node_position":{"x":816.25,"y":773.751282},"seed_int":0,"version":1},{"name":"blend2_2","type":"blend2","parameters":{"blend_type1":12,"amount1":1},"node_position":{"x":982,"y":616.249695},"seed_int":0,"generic_size":1},{"name":"tones_step","type":"tones_step","parameters":{"value":0.0137,"width":0.0224,"invert":true},"node_position":{"x":840,"y":860.000061},"seed_int":0},{"name":"blend2_3","type":"blend2","parameters":{"blend_type1":2,"amount1":1},"node_position":{"x":1335.029541,"y":633.813293},"seed_int":0,"generic_size":1},{"name":"uniform","type":"uniform","parameters":{"color":{"type":"Color","r":1,"g":0.237948,"b":0.743391,"a":1}},"node_position":{"x":1138.25,"y":755.2854},"seed_int":0},{"name":"uniform_5","type":"uniform","parameters":{"color":{"type":"Color","r":0.450848,"g":0.1091,"b":0.859375,"a":1}},"node_position":{"x":1307.835205,"y":853.87854},"seed_int":0}],"connections":[{"from":"warp_3","from_port":0,"to":"warp_2","to_port":1},{"from":"transform2_2","from_port":0,"to":"warp_3","to_port":1},{"from":"math_3","from_port":0,"to":"math","to_port":0},{"from":"transform2","from_port":0,"to":"warp_2","to_port":0},{"from":"warp_2","from_port":0,"to":"decompose","to_port":0},{"from":"decompose","from_port":1,"to":"math_3","to_port":0},{"from":"math_3","from_port":0,"to":"math_2","to_port":0},{"from":"math","from_port":0,"to":"math_4","to_port":0},{"from":"math_2","from_port":0,"to":"math_4","to_port":1},{"from":"math_4","from_port":0,"to":"supersample","to_port":0},{"from":"supersample","from_port":0,"to":"translate","to_port":0},{"from":"warp","from_port":0,"to":"buffer_4","to_port":0},{"from":"fbm2","from_port":0,"to":"warp","to_port":0},{"from":"fbm2","from_port":0,"to":"warp","to_port":1},{"from":"buffer_4","from_port":0,"to":"warp_3","to_port":0},{"from":"buffer_2","from_port":0,"to":"transform2_2","to_port":0},{"from":"fbm2_2","from_port":0,"to":"warp_4","to_port":0},{"from":"fbm2_2","from_port":0,"to":"warp_4","to_port":1},{"from":"warp_4","from_port":0,"to":"buffer_2","to_port":0},{"from":"translate","from_port":0,"to":"blend2","to_port":1},{"from":"math_4","from_port":0,"to":"blend2","to_port":0},{"from":"voronoi_triangle","from_port":1,"to":"buffer_3","to_port":0},{"from":"blend2","from_port":0,"to":"blend2_2","to_port":0},{"from":"buffer_3","from_port":0,"to":"tones_step","to_port":0},{"from":"blend2","from_port":0,"to":"blend2_2","to_port":1},{"from":"tones_step","from_port":0,"to":"blend2_2","to_port":2},{"from":"blend2","from_port":0,"to":"Material","to_port":3},{"from":"blend2_2","from_port":0,"to":"blend2_3","to_port":0},{"from":"blend2_3","from_port":0,"to":"Material","to_port":0},{"from":"blend2_3","from_port":0,"to":"Material","to_port":4},{"from":"uniform","from_port":0,"to":"blend2_3","to_port":1},{"from":"uniform_5","from_port":0,"to":"Material","to_port":5}]}